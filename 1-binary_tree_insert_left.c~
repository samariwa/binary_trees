#include <stdio.h>
#include "binary_trees.h"

/**
 * binary_tree_insert_left - a function that inserts a node
 as the left-child of another node
 * @parent: a pointer to the node to insert the left-child in
 * @value: the value to store in the new node
 *
 * returns: a pointer to the created node, or
 * NULL on failure or if parent is NULL
 *
 * description: If parent already has a left-child, the
 * new node must take its place, and the old left-child
 * must be set as the left-child of the new node.
 */
binary_tree_t *binary_tree_insert_left(binary_tree_t *parent, int value)
{
	binary_tree_t *new = binary_tree_node(parent, value), *temp;

	if (new == NULL || parent == NULL)
		return (NULL);

	temp = parent->left;

	if (temp != NULL)
	{
		new->left = temp;
		parent->left = NULL;
	}
	else
	{
		printf("{%d} Was null!\n", value);
	}
	printf("Inserted %d below %d\n", value, parent->n);
	parent->left = new;
	return (new);
}
